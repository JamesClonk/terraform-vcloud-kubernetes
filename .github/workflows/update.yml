name: Update

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform-apply:
    name: 'run terraform apply'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform Override
      env:
        TF_OVERRIDE: ${{ secrets.TF_OVERRIDE }}
      run: echo "${TF_OVERRIDE}" > override.tf

    - name: Setup Terraform tfvars
      env:
        TF_TFVARS: ${{ secrets.TF_TFVARS }}
      run: echo "${TF_TFVARS}" > terraform.tfvars

    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        terraform_version: ~1.2.8

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/master'
      run: terraform apply -auto-approve -input=false

    - name: Run Sonobuoy
      if: github.ref == 'refs/heads/master'
      run: |
        wget https://github.com/vmware-tanzu/sonobuoy/releases/download/v0.56.10/sonobuoy_0.56.10_linux_amd64.tar.gz
        tar -xvzf sonobuoy_0.56.10_linux_amd64.tar.gz
        chmod +x sonobuoy
        ./sonobuoy run --mode quick --wait --plugin-env=e2e.E2E_EXTRA_ARGS=--non-blocking-taints=CriticalAddonsOnly,true,NoExecute
        ./sonobuoy status
        results=$(./sonobuoy retrieve)
        ./sonobuoy results $results
        ./sonobuoy delete --wait

    - name: Cleanup
      if: ${{ always() }}
      run: rm -f terraform.tfvars || true
